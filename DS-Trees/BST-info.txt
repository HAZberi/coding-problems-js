Binary Search Trees Pointers!!

- A node in the tree represents a value, a pointer to the left node and a pointer to the right node.
class Node {
    constructor(value){
        this.value = value;
        this.left = null;
        this.right = null;
    }
}

- BigO => log n

Perfect Binary Tree:
    A tree that doesnt have a parent with only one child. This tree has all the parents with 
    either two or zero children.
    Leaf nodes/Terminating nodes contain half + 1 of all the nodes in the tree. Thats why is 
    super effecient to store data in a Perfect Binary Tree.
    BigO is usually is a factor of log n. 

    Calculation of Number of Node in a perfect binary tree.
    Level0 = 2^0 = 1 ==> step 1
    Level1 = 2^1 = 2 ==> step 2
    Level2 = 2^2 = 4 ==> step 3
    Level3 = 2^3 = 8 ==> step 4

    Height of the tree = Total number of steps.

    Number of Nodes = 2^*height of the tree* - 1;
